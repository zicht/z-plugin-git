# Version Control System settings
vcs:
    # The SVN url to the project. You can overwrite this in your own z.yml,
    # by default it is detected based on your working copy.
#    url:            ~

    export:
        # The revision info file to write when exporting
        revfile:    .z.rev

tasks:
    # Create a working copy of the specified version to the build dir
    _vcs.build:
        set:
            _mode: is_dir(cat(build.dir, "/.svn")) ? "update" : "checkout"
        do:
            - ?(_mode == "checkout")    @_vcs.checkout_build
            - ?(_mode == "update")      @_vcs.update_build
            - @_vcs.assert_clean
        yield: build.dir

    _vcs.update_build:
        - echo "Updating $(build.dir) to $(build.version)\n";
        - cd $(build.dir) && svn sw $(vcs.url)/$(build.version)

    _vcs.checkout_build:
#        - mkdir -p $$(dirname $(build.dir));
        - echo "Checking out version $(build.version) to $(build.dir)";
        - svn checkout $(!verbose ? "-q") $(vcs.url)/$(build.version) $(build.dir)
        - @_vcs.assert_clean

    _vcs.assert_clean:
        set:
            _state: is_dir(build.dir) ? sh(sprintf("svn st %s || true", build.dir))) : ""
        do:
            - '?(_state != "") echo "Build is not clean:"; echo "$(_state)"'
            - '?(_state != "") $(confirm("Modified files will be included in the build. Continue anyway?") ? "true" : abort)'

    # Create a version branch
    v.branch:
        help: |
            Create a branch of the current working revision.

            Note that if the working copy is updated you should take care that you are actually tagging the right revision.
        set:
            branch:     ?
            _tgt:       sprintf("%s/branches/%s", vcs.url, branch)
            _src:       ? sprintf("%s/%s", vcs.url, vcs.current)
        flags:
            switch: true
        do:
            - svn cp $(_src) $(_tgt) -m"(Z) Created branch '$(branch)' from $(vcs.current)"
            - ?(switch) svn sw $(_tgt)

    # Create a version tag
    v.tag:
        help: |
            Tags the current working revision

            The local working copy is checked to see if it contains mixed revisions
            (i.e. child dirs are committed, but the root is not updated), which might cause the wrong
            revision to be branched.

        set:
            tag:        ?
            _tgt:       sprintf("%s/tags/%s", vcs.url, tag)
            _src:       sprintf("%s/%s", vcs.url, vcs.current)

        do:
            - svn cp $(_src) $(_tgt) -m"(Z) Created tag '$(tag)' from $(vcs.current)"

    # List all versions
    v.versions:
        help: |
            List all available tags and branches
        do:
            - svn ls $(vcs.url)/tags     | awk '{print "tags/" $1}'
            - svn ls $(vcs.url)/branches | awk '{print "branches/" $1}'

    v.version:
        help: |
            Display current local working version.

        do:
            - ?(verbose) svn st
            - ?(verbose) echo working copy version $(versionof(cwd, verbose)), latest change $(svn.wc.lastchange(cwd))
            - ?(!verbose) echo $(versionof(cwd, verbose))

    # Diff to specific version
    v.diff:
        help: |
            Diff two versions
        set:
            version:   ?
        do:
            - $(vcs.diff(version, vcs.current, verbose))

    # Print the url of the project
    v.url:
        help: "Print the svn url of the project"
        set:
            _path: ? ""
        do: echo $(vcs.url)/$(_path)
